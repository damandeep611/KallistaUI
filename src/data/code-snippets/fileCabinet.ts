export const fileCabinetCode =
  'import { useState } from "react";\r\nimport { motion, AnimatePresence } from "framer-motion";\r\nimport { ChevronDown, ChevronUp } from "lucide-react";\r\n\r\ninterface Project {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  status: "In Progress" | "Completed" | "On Hold";\r\n  color: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n  {\r\n    id: 1,\r\n    title: "Website Redesign",\r\n    description:\r\n      "Overhaul of company website with modern design and improved UX.",\r\n    status: "In Progress",\r\n    color: "bg-blue-500",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: "Mobile App Development",\r\n    description:\r\n      "Creating a cross-platform mobile app for customer engagement.",\r\n    status: "On Hold",\r\n    color: "bg-yellow-500",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: "Data Analytics Dashboard",\r\n    description:\r\n      "Building a comprehensive dashboard for business intelligence.",\r\n    status: "Completed",\r\n    color: "bg-green-500",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: "E-commerce Integration",\r\n    description:\r\n      "Integrating e-commerce functionality into existing web platform.",\r\n    status: "In Progress",\r\n    color: "bg-purple-500",\r\n  },\r\n];\r\n\r\nexport default function FileCabinet() {\r\n  const [expandedId, setExpandedId] = useState<number | null>(null);\r\n\r\n  const toggleExpand = (id: number) => {\r\n    setExpandedId(expandedId === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <div className="w-full space-y-4">\r\n      <AnimatePresence>\r\n        {projects.map((project, index) => (\r\n          <motion.div\r\n            key={project.id}\r\n            layout\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            transition={{ duration: 0.3, delay: index * 0.1 }}\r\n            className={`w-full rounded-lg shadow-md overflow-hidden cursor-pointer ${project.color}`}\r\n            style={{\r\n              zIndex: projects.length - index,\r\n              marginTop: index === 0 ? "0" : "-16px", // Stack effect\r\n            }}\r\n            onClick={() => toggleExpand(project.id)}\r\n            whileHover={{\r\n              y: -8,\r\n              transition: { duration: 0.2 },\r\n            }}\r\n          >\r\n            <motion.div\r\n              layout\r\n              className="p-4 bg-opacity-90 backdrop-blur-sm flex justify-between items-center"\r\n            >\r\n              <h3 className="text-lg font-semibold text-white">\r\n                {project.title}\r\n              </h3>\r\n              {expandedId === project.id ? (\r\n                <ChevronUp size={20} className="text-white" />\r\n              ) : (\r\n                <ChevronDown size={20} className="text-white" />\r\n              )}\r\n            </motion.div>\r\n            <AnimatePresence>\r\n              {expandedId === project.id && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, height: 0 }}\r\n                  animate={{ opacity: 1, height: "auto" }}\r\n                  exit={{ opacity: 0, height: 0 }}\r\n                  transition={{ duration: 0.3 }}\r\n                  className="p-4 bg-white"\r\n                >\r\n                  <p className="text-gray-600 mb-2">{project.description}</p>\r\n                  <p className="text-sm font-medium">\r\n                    Status:{" "}\r\n                    <span className={`${getStatusColor(project.status)}`}>\r\n                      {project.status}\r\n                    </span>\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getStatusColor(status: Project["status"]) {\r\n  switch (status) {\r\n    case "In Progress":\r\n      return "text-blue-600";\r\n    case "Completed":\r\n      return "text-green-600";\r\n    case "On Hold":\r\n      return "text-yellow-600";\r\n    default:\r\n      return "text-gray-600";\r\n  }\r\n}\r\n';
